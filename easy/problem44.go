package easy

import (
	"fmt"
	"log"
)

func SolveProblem44() {
	/*
		Pentagonal numbers are generated by the formula,
		Pn=n(3n−1)/2.
		The first ten pentagonal numbers are:

		1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

		It can be seen that P4 + P7 = 22 + 70 = 92 = P8.
		However, their difference, 70 − 22 = 48, is not pentagonal.

		Find the pair of pentagonal numbers, Pj and Pk, for which
		their sum and difference are pentagonal and D = |Pk − Pj|
		is minimised;
		what is the value of D?
	*/
	ans := `TODO` // getProblem44Answer()
	fmt.Printf("Problem 44 Answer: %v\n", ans)
}

func getProblem44Answer() int {
	for d := uint(1); ; d++ {
		pd := getNthPentagonalNumber(d)
		log.Printf("Checking n = %d, pn = %d\n", d, pd)
		shouldBreakK := false
		for k := uint(1); !shouldBreakK; k++ {
			pk := getNthPentagonalNumber(k)
			next := getNthPentagonalNumber(k + 1)
			if pd < next-pk {
				log.Printf("\tIs not, because k = %d, pk = %d, pk+1 = %d\n", k, pk, next)
				shouldBreakK = true
				continue
			}
			pj := pk + pd
			if isPentagonalNumber(pj) && isPentagonalNumber(pj+pk) {
				return pd
			}
		}
	}
}

func isPentagonalNumber(n int) bool {
	for i := uint(1); ; i++ {
		pn := getNthPentagonalNumber(i)
		if pn == n {
			return true
		}
		if pn > n {
			return false
		}
	}
}

func getNthPentagonalNumber(n uint) int {
	return int(n * (3*n - 1) / 2)
}
